AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to launch an EC2 instance with key-value tags and cfn-init.

Resources:
  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Allowing SSH from any IP (consider limiting to your IP for better security)
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 3.16.146.0/29  # Allowing SSH from EC2 Instance Connect service IP range
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allowing HTTP traffic from anywhere

  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - setup
            - config
        setup:
          packages:
            yum:
              httpd: []
              aws-cfn-bootstrap: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.MyEC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyEC2Instance --region ${AWS::Region}
                runas=root
              mode: '000400'
              owner: root
              group: root
            /var/www/html/index.html:
              content: |
                <html>
                  <head><title>Welcome</title></head>
                  <body><h1>Hello from CloudFormation!</h1></body>
                </html>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                    - httpd
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c11a84584d4e09dd  # Ensure this is a free tier eligible AMI ID
      KeyName: manupptr  # Replace with your actual key pair name
      SecurityGroupIds:
        - !Ref MySecurityGroup
      IamInstanceProfile: 
        Ref: InstanceProfile  # Reference to the instance profile to attach
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > /var/log/user-data.log 2>&1
          yum update -y
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyEC2Instance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyEC2Instance --region ${AWS::Region}
          service cfn-hup start
      Tags:
      - Key: Name
        Value: MyFreeInstance
      - Key: Environment
        Value: Development
      - Key: Project
        Value: MyProject

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M  # 15 minutes

  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties: 
      Roles: 
        - !Ref InstanceRole

  InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowCFN
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStackResource
                  - cloudformation:SignalResource
                Resource: "*"
