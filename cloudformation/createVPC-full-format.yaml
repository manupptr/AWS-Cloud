AWSTemplateFormatVersion: '2010-09-09'
Description: Template for creating a VPC with 2 private and 2 public subnets.

Metadata:

Parameters:
  VPCName:
    Type: String
    Default: My-Personal-VPC
    Description: Name of the VPC
  VPCIPv4CIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for the first public subnet
  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR block for the second public subnet
  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.3.0/24
    Description: CIDR block for the first private subnet
  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.4.0/24
    Description: CIDR block for the second private subnet

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties: 
      CidrBlock: !Ref VPCIPv4CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: !Ref VPCName

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: 
      Tags:
        - Key: Name
          Value: !Sub '${VPCName}-igw'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties: 
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub '${VPCName}-public-1'

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub '${VPCName}-public-2'

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub '${VPCName}-private-1'

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub '${VPCName}-private-2'

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${VPCName}-public-rtb'

  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties: 
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties: 
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # NATGatewayEIP:
  #   Type: 'AWS::EC2::EIP'
  #   Properties:
  #     Domain: vpc

  # NATGateway:
  #   Type: 'AWS::EC2::NatGateway'
  #   Properties: 
  #     AllocationId: !GetAtt NATGatewayEIP.AllocationId
  #     SubnetId: !Ref PublicSubnet1
  #     Tags:
  #       - Key: Name
  #         Value: !Sub '${VPCName}-nat-gateway'

  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${VPCName}-private-rtb-1'

  PrivateRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${VPCName}-private-rtb-2'

  # PrivateRoute1:
  #   Type: 'AWS::EC2::Route'
  #   Properties: 
  #     RouteTableId: !Ref PrivateRouteTable1
  #     DestinationCidrBlock: '0.0.0.0/0'
  #     NatGatewayId: !Ref NATGateway

  # PrivateRoute2:
  #   Type: 'AWS::EC2::Route'
  #   Properties: 
  #     RouteTableId: !Ref PrivateRouteTable2
  #     DestinationCidrBlock: '0.0.0.0/0'
  #     NatGatewayId: !Ref NATGateway

  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties: 
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties: 
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
  PublicSubnet1Id:
    Description: 'Public Subnet 1 ID'
    Value: !Ref PublicSubnet1
  PublicSubnet2Id:
    Description: 'Public Subnet 2 ID'
    Value: !Ref PublicSubnet2
  PrivateSubnet1Id:
    Description: 'Private Subnet 1 ID'
    Value: !Ref PrivateSubnet1
  PrivateSubnet2Id:
    Description: 'Private Subnet 2 ID'
    Value: !Ref PrivateSubnet2
  # NATGatewayId:
  #   Description: 'NAT Gateway ID'
  #   Value: !Ref NATGateway
  InternetGatewayId:
    Description: 'Internet Gateway ID'
    Value: !Ref InternetGateway
